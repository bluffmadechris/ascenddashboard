import { jsPDF } from "jspdf"
import autoTable from "jspdf-autotable"
import { toast } from "@/components/ui/use-toast"

// Define invoice item type
type InvoiceItem = {
  description: string
  quantity?: number
  hours?: number
  rate: string
  amount: string
}

// Define invoice type
type Invoice = {
  id: string
  name?: string
  clientName: string
  clientId: string
  date: string
  dueDate: string
  status: string
  items: InvoiceItem[]
  subtotal: string
  tax: string
  total: string
  createdByName?: string
  paidDate?: string
  approvedBy?: string
  approvedDate?: string
  rejectionReason?: string
}

/**
 * Generate and download a PDF for an invoice
 */
export const generateInvoicePDF = async (invoice: Invoice): Promise<boolean> => {
  try {
    // Create a new PDF document
    const doc = new jsPDF()

    // Initialize autoTable plugin
    autoTable(doc, {})

    // Add company logo/header
    doc.setFontSize(20)
    doc.setTextColor(44, 62, 80) // Dark blue color
    doc.text("Ascend Media", 20, 20)

    // Add invoice details
    doc.setFontSize(10)
    doc.setTextColor(0, 0, 0)
    doc.text("123 Business Street", 20, 30)
    doc.text("Suite 100", 20, 35)
    doc.text("New York, NY 10001", 20, 40)
    doc.text("contact@ascendmedia.com", 20, 45)

    // Add invoice number and date
    doc.setFontSize(16)
    doc.setTextColor(44, 62, 80)
    doc.text(`Invoice: ${invoice.id}`, 140, 20)
    doc.setFontSize(10)
    doc.text(`Date: ${invoice.date}`, 140, 30)
    doc.text(`Due Date: ${invoice.dueDate}`, 140, 35)

    // Add status with color
    doc.setFontSize(12)
    switch (invoice.status) {
      case "paid":
        doc.setTextColor(46, 125, 50) // Green
        doc.text("PAID", 140, 45)
        break
      case "approved":
        doc.setTextColor(25, 118, 210) // Blue
        doc.text("APPROVED", 140, 45)
        break
      case "rejected":
        doc.setTextColor(211, 47, 47) // Red
        doc.text("REJECTED", 140, 45)
        break
      case "overdue":
        doc.setTextColor(245, 124, 0) // Orange
        doc.text("OVERDUE", 140, 45)
        break
      default:
        doc.setTextColor(97, 97, 97) // Gray
        doc.text("DRAFT", 140, 45)
    }

    // Add client information
    doc.setFontSize(12)
    doc.setTextColor(44, 62, 80)
    doc.text("Bill To:", 20, 60)
    doc.setFontSize(10)
    doc.setTextColor(0, 0, 0)
    doc.text(invoice.clientName, 20, 70)
    doc.text(`Client ID: ${invoice.clientId}`, 20, 75)

    // Add invoice items table
    const tableColumn = ["Description", "Hours", "Rate", "Amount"]
    const tableRows: any[][] = []

    // Add invoice items to table
    invoice.items.forEach((item) => {
      const itemData = [item.description, item.hours || "", item.rate, item.amount]
      tableRows.push(itemData)
    })

    // Generate the table using the imported autoTable function
    autoTable(doc, {
      head: [tableColumn],
      body: tableRows,
      startY: 85,
      theme: "grid",
      styles: { fontSize: 9, cellPadding: 3 },
      headStyles: { fillColor: [44, 62, 80], textColor: [255, 255, 255] },
      alternateRowStyles: { fillColor: [240, 240, 240] },
    })

    // Get the final y position after the table
    const finalY = (doc as any).lastAutoTable.finalY + 10

    // Add totals
    doc.text("Subtotal:", 120, finalY)
    doc.text(invoice.subtotal, 170, finalY, { align: "right" })

    doc.text("Tax:", 120, finalY + 7)
    doc.text(invoice.tax, 170, finalY + 7, { align: "right" })

    doc.setFontSize(12)
    doc.setFont("helvetica", "bold")
    doc.text("Total:", 120, finalY + 15)
    doc.text(invoice.total, 170, finalY + 15, { align: "right" })

    // Add additional information based on status
    let additionalInfoY = finalY + 30
    doc.setFontSize(10)
    doc.setFont("helvetica", "normal")

    if (invoice.status === "paid" && invoice.paidDate) {
      doc.setTextColor(46, 125, 50) // Green
      doc.text(`Payment received on ${invoice.paidDate}`, 20, additionalInfoY)
      additionalInfoY += 7
    }

    if (invoice.status === "approved" && invoice.approvedBy && invoice.approvedDate) {
      doc.setTextColor(25, 118, 210) // Blue
      doc.text(`Approved by ${invoice.approvedBy} on ${invoice.approvedDate}`, 20, additionalInfoY)
      additionalInfoY += 7
    }

    if (invoice.status === "rejected" && invoice.rejectionReason) {
      doc.setTextColor(211, 47, 47) // Red
      doc.text(`Rejected: ${invoice.rejectionReason}`, 20, additionalInfoY)
      additionalInfoY += 7
    }

    // Add footer
    doc.setTextColor(0, 0, 0)
    doc.setFontSize(8)
    doc.text("Thank you for your business!", 105, 280, { align: "center" })
    doc.text("Generated by Ascend Media Dashboard", 105, 285, { align: "center" })

    // Save the PDF
    doc.save(`Invoice-${invoice.id}.pdf`)
    return true
  } catch (error) {
    console.error("Error generating PDF:", error)
    toast({
      title: "PDF Generation Failed",
      description: "There was an error generating the PDF. Please try again.",
      variant: "destructive",
    })
    return false
  }
}
